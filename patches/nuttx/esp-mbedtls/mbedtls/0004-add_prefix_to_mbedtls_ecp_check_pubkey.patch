diff --git a/include/mbedtls/ecp.h b/include/mbedtls/ecp.h
index 3a766c28d24e1e22e303d32b97a577e74e9bcb4e..62d5fe3f52c62b2151837eb7cffa0f64d54a1628 100644
--- a/include/mbedtls/ecp.h
+++ b/include/mbedtls/ecp.h
@@ -756,7 +756,7 @@ int esp_mbedtls_ecp_point_write_binary( const mbedtls_ecp_group *grp,
  * \brief           This function imports a point from unsigned binary data.
  *
  * \note            This function does not check that the point actually
- *                  belongs to the given group, see mbedtls_ecp_check_pubkey()
+ *                  belongs to the given group, see esp_mbedtls_ecp_check_pubkey()
  *                  for that.
  *
  * \param grp       The group to which the point should belong.
@@ -1091,7 +1091,7 @@ int esp_mbedtls_ecp_muladd_restartable(
  *                  a valid public key for the given curve.
  * \return          Another negative error code on other kinds of failure.
  */
-int mbedtls_ecp_check_pubkey( const mbedtls_ecp_group *grp,
+int esp_mbedtls_ecp_check_pubkey( const mbedtls_ecp_group *grp,
                               const mbedtls_ecp_point *pt );
 
 /**
diff --git a/library/ecp.c b/library/ecp.c
index c42f523108cf6f0e10dc11dfd4cea854a9d9cd9f..6802ee6901b8da02d617afe50906e57a358ba927 100644
--- a/library/ecp.c
+++ b/library/ecp.c
@@ -2621,7 +2621,7 @@ static int ecp_mul_restartable_internal( mbedtls_ecp_group *grp, mbedtls_ecp_poi
 
         /* Common sanity checks */
         MBEDTLS_MPI_CHK( esp_mbedtls_ecp_check_privkey( grp, m ) );
-        MBEDTLS_MPI_CHK( mbedtls_ecp_check_pubkey( grp, P ) );
+        MBEDTLS_MPI_CHK( esp_mbedtls_ecp_check_pubkey( grp, P ) );
     }
 
     ret = MBEDTLS_ERR_ECP_BAD_INPUT_DATA;
@@ -3023,7 +3023,7 @@ static int esp_ecp_check_pubkey_mx( const mbedtls_ecp_group *grp, const mbedtls_
 int esp_mbedtls_ecp_check_pubkey_soft( const mbedtls_ecp_group *grp,
                               const mbedtls_ecp_point *pt )
 #else
-int mbedtls_ecp_check_pubkey( const mbedtls_ecp_group *grp,
+int esp_mbedtls_ecp_check_pubkey( const mbedtls_ecp_group *grp,
                               const mbedtls_ecp_point *pt )
 #endif
 {
diff --git a/library/pkparse.c b/library/pkparse.c
index fa6d98bc0c9efc23a8d681a324299b4304aa84a9..fcf2cb3f8aff8f06ae2d6b06dfe6bca5f6a4a902 100644
--- a/library/pkparse.c
+++ b/library/pkparse.c
@@ -504,7 +504,7 @@ static int esp_pk_get_ecpubkey( unsigned char **p, const unsigned char *end,
     if( ( ret = esp_mbedtls_ecp_point_read_binary( &key->grp, &key->Q,
                     (const unsigned char *) *p, end - *p ) ) == 0 )
     {
-        ret = mbedtls_ecp_check_pubkey( &key->grp, &key->Q );
+        ret = esp_mbedtls_ecp_check_pubkey( &key->grp, &key->Q );
     }
 
     /*
diff --git a/library/psa_crypto_ecp.c b/library/psa_crypto_ecp.c
index 4910487f8085d26b62c745a577a45e9206e60cd6..90ad16ee409ae7ad44e62375d184078396237564 100644
--- a/library/psa_crypto_ecp.c
+++ b/library/psa_crypto_ecp.c
@@ -129,7 +129,7 @@ psa_status_t esp_mbedtls_psa_ecp_load_representation(
 
         /* Check that the point is on the curve. */
         status = esp_mbedtls_to_psa_error(
-            mbedtls_ecp_check_pubkey( &ecp->grp, &ecp->Q ) );
+            esp_mbedtls_ecp_check_pubkey( &ecp->grp, &ecp->Q ) );
         if( status != PSA_SUCCESS )
             goto exit;
     }
